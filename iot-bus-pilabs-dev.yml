{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "The AWS CloudFormation template for this Serverless application",
    "Resources": {
        "ServerlessDeploymentBucket": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
                "BucketEncryption": {
                    "ServerSideEncryptionConfiguration": [
                        {
                            "ServerSideEncryptionByDefault": {
                                "SSEAlgorithm": "AES256"
                            }
                        }
                    ]
                }
            }
        },
        "ServerlessDeploymentBucketPolicy": {
            "Type": "AWS::S3::BucketPolicy",
            "Properties": {
                "Bucket": {
                    "Ref": "ServerlessDeploymentBucket"
                },
                "PolicyDocument": {
                    "Statement": [
                        {
                            "Action": "s3:*",
                            "Effect": "Deny",
                            "Principal": "*",
                            "Resource": [
                                {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "arn:",
                                            {
                                                "Ref": "AWS::Partition"
                                            },
                                            ":s3:::",
                                            {
                                                "Ref": "ServerlessDeploymentBucket"
                                            },
                                            "/*"
                                        ]
                                    ]
                                },
                                {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "arn:",
                                            {
                                                "Ref": "AWS::Partition"
                                            },
                                            ":s3:::",
                                            {
                                                "Ref": "ServerlessDeploymentBucket"
                                            }
                                        ]
                                    ]
                                }
                            ],
                            "Condition": {
                                "Bool": {
                                    "aws:SecureTransport": false
                                }
                            }
                        }
                    ]
                }
            }
        },
        "GetAllPilabsBusesLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
                "LogGroupName": "/aws/lambda/iot-bus-pilabs-dev-getAllPilabsBuses"
            }
        },
        "GetAllPilabsBuses1LogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
                "LogGroupName": "/aws/lambda/iot-bus-pilabs-dev-getAllPilabsBuses1"
            }
        },
        "GetAllPilabStaticDetailsLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
                "LogGroupName": "/aws/lambda/iot-bus-pilabs-dev-getAllPilabStaticDetails"
            }
        },
        "GetAllPilabStaticDetails1LogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
                "LogGroupName": "/aws/lambda/iot-bus-pilabs-dev-getAllPilabStaticDetails1"
            }
        },
        "GetPilabsBusExceptionsLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
                "LogGroupName": "/aws/lambda/iot-bus-pilabs-dev-getPilabsBusExceptions"
            }
        },
        "GetPilabsBusExceptions1LogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
                "LogGroupName": "/aws/lambda/iot-bus-pilabs-dev-getPilabsBusExceptions1"
            }
        },
        "GetPilabsBusLocationTraceLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
                "LogGroupName": "/aws/lambda/iot-bus-pilabs-dev-getPilabsBusLocationTrace"
            }
        },
        "GetPilabsBusLocationTrace1LogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
                "LogGroupName": "/aws/lambda/iot-bus-pilabs-dev-getPilabsBusLocationTrace1"
            }
        },
        "GetPilabsBusesStationEtaDataLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
                "LogGroupName": "/aws/lambda/iot-bus-pilabs-dev-getPilabsBusesStationEtaData"
            }
        },
        "UserGetPilabsStaticDetailsLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
                "LogGroupName": "/aws/lambda/iot-bus-pilabs-dev-userGetPilabsStaticDetails"
            }
        },
        "AddDeviceLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
                "LogGroupName": "/aws/lambda/iot-bus-pilabs-dev-addDevice"
            }
        },
        "GetPilabsTripsLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
                "LogGroupName": "/aws/lambda/iot-bus-pilabs-dev-getPilabsTrips"
            }
        },
        "GetDeviceInfoLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
                "LogGroupName": "/aws/lambda/iot-bus-pilabs-dev-getDeviceInfo"
            }
        },
        "InsertPilabsTripsLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
                "LogGroupName": "/aws/lambda/iot-bus-pilabs-dev-insertPilabsTrips"
            }
        },
        "SnsLambdaTriggeredLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
                "LogGroupName": "/aws/lambda/iot-bus-pilabs-dev-snsLambdaTriggered"
            }
        },
        "GetPilabsTripsETALogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
                "LogGroupName": "/aws/lambda/iot-bus-pilabs-dev-getPilabsTripsETA"
            }
        },
        "DetermineRouteLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
                "LogGroupName": "/aws/lambda/iot-bus-pilabs-dev-determineRoute"
            }
        },
        "GetPilabBusesStatusLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
                "LogGroupName": "/aws/lambda/iot-bus-pilabs-dev-getPilabBusesStatus"
            }
        },
        "IamRoleLambdaExecution": {
            "Type": "AWS::IAM::Role",
            "Properties": {
                "AssumeRolePolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Effect": "Allow",
                            "Principal": {
                                "Service": [
                                    "lambda.amazonaws.com"
                                ]
                            },
                            "Action": [
                                "sts:AssumeRole"
                            ]
                        }
                    ]
                },
                "Policies": [
                    {
                        "PolicyName": {
                            "Fn::Join": [
                                "-",
                                [
                                    "iot-bus-pilabs",
                                    "dev",
                                    "lambda"
                                ]
                            ]
                        },
                        "PolicyDocument": {
                            "Version": "2012-10-17",
                            "Statement": [
                                {
                                    "Effect": "Allow",
                                    "Action": [
                                        "logs:CreateLogStream",
                                        "logs:CreateLogGroup"
                                    ],
                                    "Resource": [
                                        {
                                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/iot-bus-pilabs-dev*:*"
                                        }
                                    ]
                                },
                                {
                                    "Effect": "Allow",
                                    "Action": [
                                        "logs:PutLogEvents"
                                    ],
                                    "Resource": [
                                        {
                                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/iot-bus-pilabs-dev*:*:*"
                                        }
                                    ]
                                },
                                {
                                    "Effect": "Allow",
                                    "Action": [
                                        "*"
                                    ],
                                    "Resource": "*"
                                }
                            ]
                        }
                    }
                ],
                "Path": "/",
                "RoleName": {
                    "Fn::Join": [
                        "-",
                        [
                            "iot-bus-pilabs",
                            "dev",
                            {
                                "Ref": "AWS::Region"
                            },
                            "lambdaRole"
                        ]
                    ]
                }
            }
        },
        "GetAllPilabsBusesLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
                "Code": {
                    "S3Bucket": {
                        "Ref": "ServerlessDeploymentBucket"
                    },
                    "S3Key": "serverless/iot-bus-pilabs/dev/1666696110740-2022-10-25T11:08:30.740Z/iot-bus-pilabs.zip"
                },
                "Handler": "pilabs/api/tracking.getAllBuses",
                "Runtime": "nodejs12.x",
                "FunctionName": "iot-bus-pilabs-dev-getAllPilabsBuses",
                "MemorySize": 320,
                "Timeout": 900,
                "Environment": {
                    "Variables": {
                        "NODE_ENV": "pilabs-dev"
                    }
                },
                "Role": {
                    "Fn::GetAtt": [
                        "IamRoleLambdaExecution",
                        "Arn"
                    ]
                }
            },
            "DependsOn": [
                "GetAllPilabsBusesLogGroup"
            ]
        },
        "GetAllPilabsBuses1LambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
                "Code": {
                    "S3Bucket": {
                        "Ref": "ServerlessDeploymentBucket"
                    },
                    "S3Key": "serverless/iot-bus-pilabs/dev/1666696110740-2022-10-25T11:08:30.740Z/iot-bus-pilabs.zip"
                },
                "Handler": "pilabs/api/tracking.getAllPilabsBuses",
                "Runtime": "nodejs12.x",
                "FunctionName": "iot-bus-pilabs-dev-getAllPilabsBuses1",
                "MemorySize": 320,
                "Timeout": 900,
                "Environment": {
                    "Variables": {
                        "NODE_ENV": "dev"
                    }
                },
                "Role": {
                    "Fn::GetAtt": [
                        "IamRoleLambdaExecution",
                        "Arn"
                    ]
                }
            },
            "DependsOn": [
                "GetAllPilabsBuses1LogGroup"
            ]
        },
        "GetAllPilabStaticDetailsLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
                "Code": {
                    "S3Bucket": {
                        "Ref": "ServerlessDeploymentBucket"
                    },
                    "S3Key": "serverless/iot-bus-pilabs/dev/1666696110740-2022-10-25T11:08:30.740Z/iot-bus-pilabs.zip"
                },
                "Handler": "pilabs/api/tracking.getAllStaticDetails",
                "Runtime": "nodejs12.x",
                "FunctionName": "iot-bus-pilabs-dev-getAllPilabStaticDetails",
                "MemorySize": 320,
                "Timeout": 900,
                "Environment": {
                    "Variables": {
                        "NODE_ENV": "pilabs-dev"
                    }
                },
                "Role": {
                    "Fn::GetAtt": [
                        "IamRoleLambdaExecution",
                        "Arn"
                    ]
                }
            },
            "DependsOn": [
                "GetAllPilabStaticDetailsLogGroup"
            ]
        },
        "GetAllPilabStaticDetails1LambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
                "Code": {
                    "S3Bucket": {
                        "Ref": "ServerlessDeploymentBucket"
                    },
                    "S3Key": "serverless/iot-bus-pilabs/dev/1666696110740-2022-10-25T11:08:30.740Z/iot-bus-pilabs.zip"
                },
                "Handler": "pilabs/api/tracking.getAllStaticDetails1",
                "Runtime": "nodejs12.x",
                "FunctionName": "iot-bus-pilabs-dev-getAllPilabStaticDetails1",
                "MemorySize": 320,
                "Timeout": 900,
                "Environment": {
                    "Variables": {
                        "NODE_ENV": "pilabs-dev"
                    }
                },
                "Role": {
                    "Fn::GetAtt": [
                        "IamRoleLambdaExecution",
                        "Arn"
                    ]
                }
            },
            "DependsOn": [
                "GetAllPilabStaticDetails1LogGroup"
            ]
        },
        "GetPilabsBusExceptionsLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
                "Code": {
                    "S3Bucket": {
                        "Ref": "ServerlessDeploymentBucket"
                    },
                    "S3Key": "serverless/iot-bus-pilabs/dev/1666696110740-2022-10-25T11:08:30.740Z/iot-bus-pilabs.zip"
                },
                "Handler": "pilabs/api/tracking.getBusExceptions",
                "Runtime": "nodejs12.x",
                "FunctionName": "iot-bus-pilabs-dev-getPilabsBusExceptions",
                "MemorySize": 320,
                "Timeout": 900,
                "Environment": {
                    "Variables": {
                        "NODE_ENV": "pilabs-dev"
                    }
                },
                "Role": {
                    "Fn::GetAtt": [
                        "IamRoleLambdaExecution",
                        "Arn"
                    ]
                }
            },
            "DependsOn": [
                "GetPilabsBusExceptionsLogGroup"
            ]
        },
        "GetPilabsBusExceptions1LambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
                "Code": {
                    "S3Bucket": {
                        "Ref": "ServerlessDeploymentBucket"
                    },
                    "S3Key": "serverless/iot-bus-pilabs/dev/1666696110740-2022-10-25T11:08:30.740Z/iot-bus-pilabs.zip"
                },
                "Handler": "pilabs/api/tracking.getBusExceptions1",
                "Runtime": "nodejs12.x",
                "FunctionName": "iot-bus-pilabs-dev-getPilabsBusExceptions1",
                "MemorySize": 320,
                "Timeout": 900,
                "Environment": {
                    "Variables": {
                        "NODE_ENV": "pilabs-dev"
                    }
                },
                "Role": {
                    "Fn::GetAtt": [
                        "IamRoleLambdaExecution",
                        "Arn"
                    ]
                }
            },
            "DependsOn": [
                "GetPilabsBusExceptions1LogGroup"
            ]
        },
        "GetPilabsBusLocationTraceLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
                "Code": {
                    "S3Bucket": {
                        "Ref": "ServerlessDeploymentBucket"
                    },
                    "S3Key": "serverless/iot-bus-pilabs/dev/1666696110740-2022-10-25T11:08:30.740Z/iot-bus-pilabs.zip"
                },
                "Handler": "pilabs/api/tracking.getBusLocationTrace",
                "Runtime": "nodejs12.x",
                "FunctionName": "iot-bus-pilabs-dev-getPilabsBusLocationTrace",
                "MemorySize": 320,
                "Timeout": 900,
                "Environment": {
                    "Variables": {
                        "NODE_ENV": "pilabs-dev"
                    }
                },
                "Role": {
                    "Fn::GetAtt": [
                        "IamRoleLambdaExecution",
                        "Arn"
                    ]
                }
            },
            "DependsOn": [
                "GetPilabsBusLocationTraceLogGroup"
            ]
        },
        "GetPilabsBusLocationTrace1LambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
                "Code": {
                    "S3Bucket": {
                        "Ref": "ServerlessDeploymentBucket"
                    },
                    "S3Key": "serverless/iot-bus-pilabs/dev/1666696110740-2022-10-25T11:08:30.740Z/iot-bus-pilabs.zip"
                },
                "Handler": "pilabs/api/tracking.getBusLocationTrace1",
                "Runtime": "nodejs12.x",
                "FunctionName": "iot-bus-pilabs-dev-getPilabsBusLocationTrace1",
                "MemorySize": 320,
                "Timeout": 900,
                "Environment": {
                    "Variables": {
                        "NODE_ENV": "dev"
                    }
                },
                "Role": {
                    "Fn::GetAtt": [
                        "IamRoleLambdaExecution",
                        "Arn"
                    ]
                }
            },
            "DependsOn": [
                "GetPilabsBusLocationTrace1LogGroup"
            ]
        },
        "GetPilabsBusesStationEtaDataLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
                "Code": {
                    "S3Bucket": {
                        "Ref": "ServerlessDeploymentBucket"
                    },
                    "S3Key": "serverless/iot-bus-pilabs/dev/1666696110740-2022-10-25T11:08:30.740Z/iot-bus-pilabs.zip"
                },
                "Handler": "pilabs/api/subAdmin.getBusesStationEtaData",
                "Runtime": "nodejs12.x",
                "FunctionName": "iot-bus-pilabs-dev-getPilabsBusesStationEtaData",
                "MemorySize": 320,
                "Timeout": 900,
                "Environment": {
                    "Variables": {
                        "NODE_ENV": "dev"
                    }
                },
                "Role": {
                    "Fn::GetAtt": [
                        "IamRoleLambdaExecution",
                        "Arn"
                    ]
                }
            },
            "DependsOn": [
                "GetPilabsBusesStationEtaDataLogGroup"
            ]
        },
        "UserGetPilabsStaticDetailsLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
                "Code": {
                    "S3Bucket": {
                        "Ref": "ServerlessDeploymentBucket"
                    },
                    "S3Key": "serverless/iot-bus-pilabs/dev/1666696110740-2022-10-25T11:08:30.740Z/iot-bus-pilabs.zip"
                },
                "Handler": "pilabs/api/subAdmin.userGetStaticDetails",
                "Runtime": "nodejs12.x",
                "FunctionName": "iot-bus-pilabs-dev-userGetPilabsStaticDetails",
                "MemorySize": 320,
                "Timeout": 900,
                "Environment": {
                    "Variables": {
                        "NODE_ENV": "dev"
                    }
                },
                "Role": {
                    "Fn::GetAtt": [
                        "IamRoleLambdaExecution",
                        "Arn"
                    ]
                }
            },
            "DependsOn": [
                "UserGetPilabsStaticDetailsLogGroup"
            ]
        },
        "AddDeviceLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
                "Code": {
                    "S3Bucket": {
                        "Ref": "ServerlessDeploymentBucket"
                    },
                    "S3Key": "serverless/iot-bus-pilabs/dev/1666696110740-2022-10-25T11:08:30.740Z/iot-bus-pilabs.zip"
                },
                "Handler": "pilabs/api/device.add",
                "Runtime": "nodejs12.x",
                "FunctionName": "iot-bus-pilabs-dev-addDevice",
                "MemorySize": 320,
                "Timeout": 900,
                "Environment": {
                    "Variables": {
                        "NODE_ENV": "dev"
                    }
                },
                "Role": {
                    "Fn::GetAtt": [
                        "IamRoleLambdaExecution",
                        "Arn"
                    ]
                }
            },
            "DependsOn": [
                "AddDeviceLogGroup"
            ]
        },
        "GetPilabsTripsLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
                "Code": {
                    "S3Bucket": {
                        "Ref": "ServerlessDeploymentBucket"
                    },
                    "S3Key": "serverless/iot-bus-pilabs/dev/1666696110740-2022-10-25T11:08:30.740Z/iot-bus-pilabs.zip"
                },
                "Handler": "pilabs/api/trips.getAll",
                "Runtime": "nodejs12.x",
                "FunctionName": "iot-bus-pilabs-dev-getPilabsTrips",
                "MemorySize": 320,
                "Timeout": 900,
                "Environment": {
                    "Variables": {
                        "NODE_ENV": "dev"
                    }
                },
                "Role": {
                    "Fn::GetAtt": [
                        "IamRoleLambdaExecution",
                        "Arn"
                    ]
                }
            },
            "DependsOn": [
                "GetPilabsTripsLogGroup"
            ]
        },
        "GetDeviceInfoLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
                "Code": {
                    "S3Bucket": {
                        "Ref": "ServerlessDeploymentBucket"
                    },
                    "S3Key": "serverless/iot-bus-pilabs/dev/1666696110740-2022-10-25T11:08:30.740Z/iot-bus-pilabs.zip"
                },
                "Handler": "pilabs/api/sns.getAll",
                "Runtime": "nodejs12.x",
                "FunctionName": "iot-bus-pilabs-dev-getDeviceInfo",
                "MemorySize": 320,
                "Timeout": 900,
                "Environment": {
                    "Variables": {
                        "NODE_ENV": "pilabs-dev"
                    }
                },
                "Role": {
                    "Fn::GetAtt": [
                        "IamRoleLambdaExecution",
                        "Arn"
                    ]
                }
            },
            "DependsOn": [
                "GetDeviceInfoLogGroup"
            ]
        },
        "InsertPilabsTripsLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
                "Code": {
                    "S3Bucket": {
                        "Ref": "ServerlessDeploymentBucket"
                    },
                    "S3Key": "serverless/iot-bus-pilabs/dev/1666696110740-2022-10-25T11:08:30.740Z/iot-bus-pilabs.zip"
                },
                "Handler": "pilabs/api/trips.getAll1",
                "Runtime": "nodejs12.x",
                "FunctionName": "iot-bus-pilabs-dev-insertPilabsTrips",
                "MemorySize": 320,
                "Timeout": 900,
                "Environment": {
                    "Variables": {
                        "NODE_ENV": "pilabs-dev"
                    }
                },
                "Role": {
                    "Fn::GetAtt": [
                        "IamRoleLambdaExecution",
                        "Arn"
                    ]
                }
            },
            "DependsOn": [
                "InsertPilabsTripsLogGroup"
            ]
        },
        "SnsLambdaTriggeredLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
                "Code": {
                    "S3Bucket": {
                        "Ref": "ServerlessDeploymentBucket"
                    },
                    "S3Key": "serverless/iot-bus-pilabs/dev/1666696110740-2022-10-25T11:08:30.740Z/iot-bus-pilabs.zip"
                },
                "Handler": "pilabs/api/sns.snsLambda",
                "Runtime": "nodejs12.x",
                "FunctionName": "iot-bus-pilabs-dev-snsLambdaTriggered",
                "MemorySize": 320,
                "Timeout": 900,
                "Environment": {
                    "Variables": {
                        "NODE_ENV": "pilabs-dev"
                    }
                },
                "Role": {
                    "Fn::GetAtt": [
                        "IamRoleLambdaExecution",
                        "Arn"
                    ]
                }
            },
            "DependsOn": [
                "SnsLambdaTriggeredLogGroup"
            ]
        },
        "GetPilabsTripsETALambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
                "Code": {
                    "S3Bucket": {
                        "Ref": "ServerlessDeploymentBucket"
                    },
                    "S3Key": "serverless/iot-bus-pilabs/dev/1666696110740-2022-10-25T11:08:30.740Z/iot-bus-pilabs.zip"
                },
                "Handler": "pilabs/api/tracking.getBusesStationEtaData",
                "Runtime": "nodejs12.x",
                "FunctionName": "iot-bus-pilabs-dev-getPilabsTripsETA",
                "MemorySize": 320,
                "Timeout": 900,
                "Environment": {
                    "Variables": {
                        "NODE_ENV": "pilabs-dev"
                    }
                },
                "Role": {
                    "Fn::GetAtt": [
                        "IamRoleLambdaExecution",
                        "Arn"
                    ]
                }
            },
            "DependsOn": [
                "GetPilabsTripsETALogGroup"
            ]
        },
        "DetermineRouteLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
                "Code": {
                    "S3Bucket": {
                        "Ref": "ServerlessDeploymentBucket"
                    },
                    "S3Key": "serverless/iot-bus-pilabs/dev/1666696110740-2022-10-25T11:08:30.740Z/iot-bus-pilabs.zip"
                },
                "Handler": "pilabs/api/tracking.determineRouteNew",
                "Runtime": "nodejs12.x",
                "FunctionName": "iot-bus-pilabs-dev-determineRoute",
                "MemorySize": 320,
                "Timeout": 900,
                "Environment": {
                    "Variables": {
                        "NODE_ENV": "pilabs-dev"
                    }
                },
                "Role": {
                    "Fn::GetAtt": [
                        "IamRoleLambdaExecution",
                        "Arn"
                    ]
                }
            },
            "DependsOn": [
                "DetermineRouteLogGroup"
            ]
        },
        "GetPilabBusesStatusLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
                "Code": {
                    "S3Bucket": {
                        "Ref": "ServerlessDeploymentBucket"
                    },
                    "S3Key": "serverless/iot-bus-pilabs/dev/1666696110740-2022-10-25T11:08:30.740Z/iot-bus-pilabs.zip"
                },
                "Handler": "pilabs/api/tracking.getPilabBusesStatus",
                "Runtime": "nodejs12.x",
                "FunctionName": "iot-bus-pilabs-dev-getPilabBusesStatus",
                "MemorySize": 320,
                "Timeout": 900,
                "Environment": {
                    "Variables": {
                        "NODE_ENV": "pilabs-dev"
                    }
                },
                "Role": {
                    "Fn::GetAtt": [
                        "IamRoleLambdaExecution",
                        "Arn"
                    ]
                }
            },
            "DependsOn": [
                "GetPilabBusesStatusLogGroup"
            ]
        },
        "DetermineRouteEventsRuleSchedule1": {
            "Type": "AWS::Events::Rule",
            "Properties": {
                "ScheduleExpression": "rate(1 minute)",
                "State": "ENABLED",
                "Targets": [
                    {
                        "Arn": {
                            "Fn::GetAtt": [
                                "DetermineRouteLambdaFunction",
                                "Arn"
                            ]
                        },
                        "Id": "determineRouteSchedule"
                    }
                ]
            }
        },
        "DetermineRouteLambdaPermissionEventsRuleSchedule1": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
                "FunctionName": {
                    "Fn::GetAtt": [
                        "DetermineRouteLambdaFunction",
                        "Arn"
                    ]
                },
                "Action": "lambda:InvokeFunction",
                "Principal": "events.amazonaws.com",
                "SourceArn": {
                    "Fn::GetAtt": [
                        "DetermineRouteEventsRuleSchedule1",
                        "Arn"
                    ]
                }
            }
        },
        "ApiGatewayRestApi": {
            "Type": "AWS::ApiGateway::RestApi",
            "Properties": {
                "Name": "dev-iot-bus-pilabs",
                "EndpointConfiguration": {
                    "Types": [
                        "EDGE"
                    ]
                },
                "Policy": ""
            }
        },
        "ApiGatewayResourceApi": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
                "ParentId": {
                    "Fn::GetAtt": [
                        "ApiGatewayRestApi",
                        "RootResourceId"
                    ]
                },
                "PathPart": "api",
                "RestApiId": {
                    "Ref": "ApiGatewayRestApi"
                }
            }
        },
        "ApiGatewayResourceApiPilabs": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
                "ParentId": {
                    "Ref": "ApiGatewayResourceApi"
                },
                "PathPart": "pilabs",
                "RestApiId": {
                    "Ref": "ApiGatewayRestApi"
                }
            }
        },
        "ApiGatewayResourceApiPilabsTracking": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
                "ParentId": {
                    "Ref": "ApiGatewayResourceApiPilabs"
                },
                "PathPart": "Tracking",
                "RestApiId": {
                    "Ref": "ApiGatewayRestApi"
                }
            }
        },
        "ApiGatewayResourceApiPilabsTrackingGetallbuses": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
                "ParentId": {
                    "Ref": "ApiGatewayResourceApiPilabsTracking"
                },
                "PathPart": "getAllBuses",
                "RestApiId": {
                    "Ref": "ApiGatewayRestApi"
                }
            }
        },
        "ApiGatewayResourceApiPilabsTrackingGetallpilabsbuses": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
                "ParentId": {
                    "Ref": "ApiGatewayResourceApiPilabsTracking"
                },
                "PathPart": "getAllPilabsBuses",
                "RestApiId": {
                    "Ref": "ApiGatewayRestApi"
                }
            }
        },
        "ApiGatewayResourceApiPilabsTrackingGetallstaticdetails": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
                "ParentId": {
                    "Ref": "ApiGatewayResourceApiPilabsTracking"
                },
                "PathPart": "getAllStaticDetails",
                "RestApiId": {
                    "Ref": "ApiGatewayRestApi"
                }
            }
        },
        "ApiGatewayResourceApiPilabsTrackingGetallstaticdetails1": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
                "ParentId": {
                    "Ref": "ApiGatewayResourceApiPilabsTracking"
                },
                "PathPart": "getAllStaticDetails1",
                "RestApiId": {
                    "Ref": "ApiGatewayRestApi"
                }
            }
        },
        "ApiGatewayResourceApiPilabsTrackingGetbusexceptions": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
                "ParentId": {
                    "Ref": "ApiGatewayResourceApiPilabsTracking"
                },
                "PathPart": "getBusExceptions",
                "RestApiId": {
                    "Ref": "ApiGatewayRestApi"
                }
            }
        },
        "ApiGatewayResourceApiPilabsTrackingGetbusexceptions1": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
                "ParentId": {
                    "Ref": "ApiGatewayResourceApiPilabsTracking"
                },
                "PathPart": "getBusExceptions1",
                "RestApiId": {
                    "Ref": "ApiGatewayRestApi"
                }
            }
        },
        "ApiGatewayResourceApiPilabsTrackingGetbuslocationtrace": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
                "ParentId": {
                    "Ref": "ApiGatewayResourceApiPilabsTracking"
                },
                "PathPart": "getBusLocationTrace",
                "RestApiId": {
                    "Ref": "ApiGatewayRestApi"
                }
            }
        },
        "ApiGatewayResourceApiPilabsTrackingGetbuslocationtrace1": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
                "ParentId": {
                    "Ref": "ApiGatewayResourceApiPilabsTracking"
                },
                "PathPart": "getBusLocationTrace1",
                "RestApiId": {
                    "Ref": "ApiGatewayRestApi"
                }
            }
        },
        "ApiGatewayResourceApiPilabsTrackingGetbusstatus": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
                "ParentId": {
                    "Ref": "ApiGatewayResourceApiPilabsTracking"
                },
                "PathPart": "getBusStatus",
                "RestApiId": {
                    "Ref": "ApiGatewayRestApi"
                }
            }
        },
        "ApiGatewayResourceApiPilabsUser": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
                "ParentId": {
                    "Ref": "ApiGatewayResourceApiPilabs"
                },
                "PathPart": "user",
                "RestApiId": {
                    "Ref": "ApiGatewayRestApi"
                }
            }
        },
        "ApiGatewayResourceApiPilabsUserGetbusesstationetadata": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
                "ParentId": {
                    "Ref": "ApiGatewayResourceApiPilabsUser"
                },
                "PathPart": "getBusesStationEtaData",
                "RestApiId": {
                    "Ref": "ApiGatewayRestApi"
                }
            }
        },
        "ApiGatewayResourceApiPilabsUserUsergetstaticdetails": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
                "ParentId": {
                    "Ref": "ApiGatewayResourceApiPilabsUser"
                },
                "PathPart": "userGetStaticDetails",
                "RestApiId": {
                    "Ref": "ApiGatewayRestApi"
                }
            }
        },
        "ApiGatewayResourceApiPilabsAdddevice": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
                "ParentId": {
                    "Ref": "ApiGatewayResourceApiPilabs"
                },
                "PathPart": "addDevice",
                "RestApiId": {
                    "Ref": "ApiGatewayRestApi"
                }
            }
        },
        "ApiGatewayResourceApiPilabsGetall": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
                "ParentId": {
                    "Ref": "ApiGatewayResourceApiPilabs"
                },
                "PathPart": "getAll",
                "RestApiId": {
                    "Ref": "ApiGatewayRestApi"
                }
            }
        },
        "ApiGatewayResourceApiPilabsSns": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
                "ParentId": {
                    "Ref": "ApiGatewayResourceApiPilabs"
                },
                "PathPart": "sns",
                "RestApiId": {
                    "Ref": "ApiGatewayRestApi"
                }
            }
        },
        "ApiGatewayResourceApiPilabsSnsGetall": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
                "ParentId": {
                    "Ref": "ApiGatewayResourceApiPilabsSns"
                },
                "PathPart": "getAll",
                "RestApiId": {
                    "Ref": "ApiGatewayRestApi"
                }
            }
        },
        "ApiGatewayResourceApiPilabsGetall1": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
                "ParentId": {
                    "Ref": "ApiGatewayResourceApiPilabs"
                },
                "PathPart": "getAll1",
                "RestApiId": {
                    "Ref": "ApiGatewayRestApi"
                }
            }
        },
        "ApiGatewayResourceApiPilabsGettripeta": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
                "ParentId": {
                    "Ref": "ApiGatewayResourceApiPilabs"
                },
                "PathPart": "getTripETA",
                "RestApiId": {
                    "Ref": "ApiGatewayRestApi"
                }
            }
        },
        "ApiGatewayMethodApiPilabsTrackingGetallbusesOptions": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
                "AuthorizationType": "NONE",
                "HttpMethod": "OPTIONS",
                "MethodResponses": [
                    {
                        "StatusCode": "200",
                        "ResponseParameters": {
                            "method.response.header.Access-Control-Allow-Origin": true,
                            "method.response.header.Access-Control-Allow-Headers": true,
                            "method.response.header.Access-Control-Allow-Methods": true
                        },
                        "ResponseModels": {}
                    }
                ],
                "RequestParameters": {},
                "Integration": {
                    "Type": "MOCK",
                    "RequestTemplates": {
                        "application/json": "{statusCode:200}"
                    },
                    "ContentHandling": "CONVERT_TO_TEXT",
                    "IntegrationResponses": [
                        {
                            "StatusCode": "200",
                            "ResponseParameters": {
                                "method.response.header.Access-Control-Allow-Origin": "'*'",
                                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'",
                                "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET'"
                            },
                            "ResponseTemplates": {
                                "application/json": ""
                            }
                        }
                    ]
                },
                "ResourceId": {
                    "Ref": "ApiGatewayResourceApiPilabsTrackingGetallbuses"
                },
                "RestApiId": {
                    "Ref": "ApiGatewayRestApi"
                }
            }
        },
        "ApiGatewayMethodApiPilabsTrackingGetallpilabsbusesOptions": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
                "AuthorizationType": "NONE",
                "HttpMethod": "OPTIONS",
                "MethodResponses": [
                    {
                        "StatusCode": "200",
                        "ResponseParameters": {
                            "method.response.header.Access-Control-Allow-Origin": true,
                            "method.response.header.Access-Control-Allow-Headers": true,
                            "method.response.header.Access-Control-Allow-Methods": true
                        },
                        "ResponseModels": {}
                    }
                ],
                "RequestParameters": {},
                "Integration": {
                    "Type": "MOCK",
                    "RequestTemplates": {
                        "application/json": "{statusCode:200}"
                    },
                    "ContentHandling": "CONVERT_TO_TEXT",
                    "IntegrationResponses": [
                        {
                            "StatusCode": "200",
                            "ResponseParameters": {
                                "method.response.header.Access-Control-Allow-Origin": "'*'",
                                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'",
                                "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET'"
                            },
                            "ResponseTemplates": {
                                "application/json": ""
                            }
                        }
                    ]
                },
                "ResourceId": {
                    "Ref": "ApiGatewayResourceApiPilabsTrackingGetallpilabsbuses"
                },
                "RestApiId": {
                    "Ref": "ApiGatewayRestApi"
                }
            }
        },
        "ApiGatewayMethodApiPilabsTrackingGetallstaticdetailsOptions": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
                "AuthorizationType": "NONE",
                "HttpMethod": "OPTIONS",
                "MethodResponses": [
                    {
                        "StatusCode": "200",
                        "ResponseParameters": {
                            "method.response.header.Access-Control-Allow-Origin": true,
                            "method.response.header.Access-Control-Allow-Headers": true,
                            "method.response.header.Access-Control-Allow-Methods": true
                        },
                        "ResponseModels": {}
                    }
                ],
                "RequestParameters": {},
                "Integration": {
                    "Type": "MOCK",
                    "RequestTemplates": {
                        "application/json": "{statusCode:200}"
                    },
                    "ContentHandling": "CONVERT_TO_TEXT",
                    "IntegrationResponses": [
                        {
                            "StatusCode": "200",
                            "ResponseParameters": {
                                "method.response.header.Access-Control-Allow-Origin": "'*'",
                                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'",
                                "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET'"
                            },
                            "ResponseTemplates": {
                                "application/json": ""
                            }
                        }
                    ]
                },
                "ResourceId": {
                    "Ref": "ApiGatewayResourceApiPilabsTrackingGetallstaticdetails"
                },
                "RestApiId": {
                    "Ref": "ApiGatewayRestApi"
                }
            }
        },
        "ApiGatewayMethodApiPilabsTrackingGetallstaticdetails1Options": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
                "AuthorizationType": "NONE",
                "HttpMethod": "OPTIONS",
                "MethodResponses": [
                    {
                        "StatusCode": "200",
                        "ResponseParameters": {
                            "method.response.header.Access-Control-Allow-Origin": true,
                            "method.response.header.Access-Control-Allow-Headers": true,
                            "method.response.header.Access-Control-Allow-Methods": true
                        },
                        "ResponseModels": {}
                    }
                ],
                "RequestParameters": {},
                "Integration": {
                    "Type": "MOCK",
                    "RequestTemplates": {
                        "application/json": "{statusCode:200}"
                    },
                    "ContentHandling": "CONVERT_TO_TEXT",
                    "IntegrationResponses": [
                        {
                            "StatusCode": "200",
                            "ResponseParameters": {
                                "method.response.header.Access-Control-Allow-Origin": "'*'",
                                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'",
                                "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET'"
                            },
                            "ResponseTemplates": {
                                "application/json": ""
                            }
                        }
                    ]
                },
                "ResourceId": {
                    "Ref": "ApiGatewayResourceApiPilabsTrackingGetallstaticdetails1"
                },
                "RestApiId": {
                    "Ref": "ApiGatewayRestApi"
                }
            }
        },
        "ApiGatewayMethodApiPilabsTrackingGetbusexceptionsOptions": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
                "AuthorizationType": "NONE",
                "HttpMethod": "OPTIONS",
                "MethodResponses": [
                    {
                        "StatusCode": "200",
                        "ResponseParameters": {
                            "method.response.header.Access-Control-Allow-Origin": true,
                            "method.response.header.Access-Control-Allow-Headers": true,
                            "method.response.header.Access-Control-Allow-Methods": true
                        },
                        "ResponseModels": {}
                    }
                ],
                "RequestParameters": {},
                "Integration": {
                    "Type": "MOCK",
                    "RequestTemplates": {
                        "application/json": "{statusCode:200}"
                    },
                    "ContentHandling": "CONVERT_TO_TEXT",
                    "IntegrationResponses": [
                        {
                            "StatusCode": "200",
                            "ResponseParameters": {
                                "method.response.header.Access-Control-Allow-Origin": "'*'",
                                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'",
                                "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET'"
                            },
                            "ResponseTemplates": {
                                "application/json": ""
                            }
                        }
                    ]
                },
                "ResourceId": {
                    "Ref": "ApiGatewayResourceApiPilabsTrackingGetbusexceptions"
                },
                "RestApiId": {
                    "Ref": "ApiGatewayRestApi"
                }
            }
        },
        "ApiGatewayMethodApiPilabsTrackingGetbusexceptions1Options": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
                "AuthorizationType": "NONE",
                "HttpMethod": "OPTIONS",
                "MethodResponses": [
                    {
                        "StatusCode": "200",
                        "ResponseParameters": {
                            "method.response.header.Access-Control-Allow-Origin": true,
                            "method.response.header.Access-Control-Allow-Headers": true,
                            "method.response.header.Access-Control-Allow-Methods": true
                        },
                        "ResponseModels": {}
                    }
                ],
                "RequestParameters": {},
                "Integration": {
                    "Type": "MOCK",
                    "RequestTemplates": {
                        "application/json": "{statusCode:200}"
                    },
                    "ContentHandling": "CONVERT_TO_TEXT",
                    "IntegrationResponses": [
                        {
                            "StatusCode": "200",
                            "ResponseParameters": {
                                "method.response.header.Access-Control-Allow-Origin": "'*'",
                                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'",
                                "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET'"
                            },
                            "ResponseTemplates": {
                                "application/json": ""
                            }
                        }
                    ]
                },
                "ResourceId": {
                    "Ref": "ApiGatewayResourceApiPilabsTrackingGetbusexceptions1"
                },
                "RestApiId": {
                    "Ref": "ApiGatewayRestApi"
                }
            }
        },
        "ApiGatewayMethodApiPilabsTrackingGetbuslocationtraceOptions": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
                "AuthorizationType": "NONE",
                "HttpMethod": "OPTIONS",
                "MethodResponses": [
                    {
                        "StatusCode": "200",
                        "ResponseParameters": {
                            "method.response.header.Access-Control-Allow-Origin": true,
                            "method.response.header.Access-Control-Allow-Headers": true,
                            "method.response.header.Access-Control-Allow-Methods": true
                        },
                        "ResponseModels": {}
                    }
                ],
                "RequestParameters": {},
                "Integration": {
                    "Type": "MOCK",
                    "RequestTemplates": {
                        "application/json": "{statusCode:200}"
                    },
                    "ContentHandling": "CONVERT_TO_TEXT",
                    "IntegrationResponses": [
                        {
                            "StatusCode": "200",
                            "ResponseParameters": {
                                "method.response.header.Access-Control-Allow-Origin": "'*'",
                                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'",
                                "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET'"
                            },
                            "ResponseTemplates": {
                                "application/json": ""
                            }
                        }
                    ]
                },
                "ResourceId": {
                    "Ref": "ApiGatewayResourceApiPilabsTrackingGetbuslocationtrace"
                },
                "RestApiId": {
                    "Ref": "ApiGatewayRestApi"
                }
            }
        },
        "ApiGatewayMethodApiPilabsTrackingGetbuslocationtrace1Options": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
                "AuthorizationType": "NONE",
                "HttpMethod": "OPTIONS",
                "MethodResponses": [
                    {
                        "StatusCode": "200",
                        "ResponseParameters": {
                            "method.response.header.Access-Control-Allow-Origin": true,
                            "method.response.header.Access-Control-Allow-Headers": true,
                            "method.response.header.Access-Control-Allow-Methods": true
                        },
                        "ResponseModels": {}
                    }
                ],
                "RequestParameters": {},
                "Integration": {
                    "Type": "MOCK",
                    "RequestTemplates": {
                        "application/json": "{statusCode:200}"
                    },
                    "ContentHandling": "CONVERT_TO_TEXT",
                    "IntegrationResponses": [
                        {
                            "StatusCode": "200",
                            "ResponseParameters": {
                                "method.response.header.Access-Control-Allow-Origin": "'*'",
                                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'",
                                "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET'"
                            },
                            "ResponseTemplates": {
                                "application/json": ""
                            }
                        }
                    ]
                },
                "ResourceId": {
                    "Ref": "ApiGatewayResourceApiPilabsTrackingGetbuslocationtrace1"
                },
                "RestApiId": {
                    "Ref": "ApiGatewayRestApi"
                }
            }
        },
        "ApiGatewayMethodApiPilabsUserGetbusesstationetadataOptions": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
                "AuthorizationType": "NONE",
                "HttpMethod": "OPTIONS",
                "MethodResponses": [
                    {
                        "StatusCode": "200",
                        "ResponseParameters": {
                            "method.response.header.Access-Control-Allow-Origin": true,
                            "method.response.header.Access-Control-Allow-Headers": true,
                            "method.response.header.Access-Control-Allow-Methods": true
                        },
                        "ResponseModels": {}
                    }
                ],
                "RequestParameters": {},
                "Integration": {
                    "Type": "MOCK",
                    "RequestTemplates": {
                        "application/json": "{statusCode:200}"
                    },
                    "ContentHandling": "CONVERT_TO_TEXT",
                    "IntegrationResponses": [
                        {
                            "StatusCode": "200",
                            "ResponseParameters": {
                                "method.response.header.Access-Control-Allow-Origin": "'*'",
                                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'",
                                "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET'"
                            },
                            "ResponseTemplates": {
                                "application/json": ""
                            }
                        }
                    ]
                },
                "ResourceId": {
                    "Ref": "ApiGatewayResourceApiPilabsUserGetbusesstationetadata"
                },
                "RestApiId": {
                    "Ref": "ApiGatewayRestApi"
                }
            }
        },
        "ApiGatewayMethodApiPilabsUserUsergetstaticdetailsOptions": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
                "AuthorizationType": "NONE",
                "HttpMethod": "OPTIONS",
                "MethodResponses": [
                    {
                        "StatusCode": "200",
                        "ResponseParameters": {
                            "method.response.header.Access-Control-Allow-Origin": true,
                            "method.response.header.Access-Control-Allow-Headers": true,
                            "method.response.header.Access-Control-Allow-Methods": true
                        },
                        "ResponseModels": {}
                    }
                ],
                "RequestParameters": {},
                "Integration": {
                    "Type": "MOCK",
                    "RequestTemplates": {
                        "application/json": "{statusCode:200}"
                    },
                    "ContentHandling": "CONVERT_TO_TEXT",
                    "IntegrationResponses": [
                        {
                            "StatusCode": "200",
                            "ResponseParameters": {
                                "method.response.header.Access-Control-Allow-Origin": "'*'",
                                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'",
                                "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET'"
                            },
                            "ResponseTemplates": {
                                "application/json": ""
                            }
                        }
                    ]
                },
                "ResourceId": {
                    "Ref": "ApiGatewayResourceApiPilabsUserUsergetstaticdetails"
                },
                "RestApiId": {
                    "Ref": "ApiGatewayRestApi"
                }
            }
        },
        "ApiGatewayMethodApiPilabsAdddeviceOptions": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
                "AuthorizationType": "NONE",
                "HttpMethod": "OPTIONS",
                "MethodResponses": [
                    {
                        "StatusCode": "200",
                        "ResponseParameters": {
                            "method.response.header.Access-Control-Allow-Origin": true,
                            "method.response.header.Access-Control-Allow-Headers": true,
                            "method.response.header.Access-Control-Allow-Methods": true
                        },
                        "ResponseModels": {}
                    }
                ],
                "RequestParameters": {},
                "Integration": {
                    "Type": "MOCK",
                    "RequestTemplates": {
                        "application/json": "{statusCode:200}"
                    },
                    "ContentHandling": "CONVERT_TO_TEXT",
                    "IntegrationResponses": [
                        {
                            "StatusCode": "200",
                            "ResponseParameters": {
                                "method.response.header.Access-Control-Allow-Origin": "'*'",
                                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'",
                                "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,POST'"
                            },
                            "ResponseTemplates": {
                                "application/json": ""
                            }
                        }
                    ]
                },
                "ResourceId": {
                    "Ref": "ApiGatewayResourceApiPilabsAdddevice"
                },
                "RestApiId": {
                    "Ref": "ApiGatewayRestApi"
                }
            }
        },
        "ApiGatewayMethodApiPilabsGetallOptions": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
                "AuthorizationType": "NONE",
                "HttpMethod": "OPTIONS",
                "MethodResponses": [
                    {
                        "StatusCode": "200",
                        "ResponseParameters": {
                            "method.response.header.Access-Control-Allow-Origin": true,
                            "method.response.header.Access-Control-Allow-Headers": true,
                            "method.response.header.Access-Control-Allow-Methods": true
                        },
                        "ResponseModels": {}
                    }
                ],
                "RequestParameters": {},
                "Integration": {
                    "Type": "MOCK",
                    "RequestTemplates": {
                        "application/json": "{statusCode:200}"
                    },
                    "ContentHandling": "CONVERT_TO_TEXT",
                    "IntegrationResponses": [
                        {
                            "StatusCode": "200",
                            "ResponseParameters": {
                                "method.response.header.Access-Control-Allow-Origin": "'*'",
                                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'",
                                "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET'"
                            },
                            "ResponseTemplates": {
                                "application/json": ""
                            }
                        }
                    ]
                },
                "ResourceId": {
                    "Ref": "ApiGatewayResourceApiPilabsGetall"
                },
                "RestApiId": {
                    "Ref": "ApiGatewayRestApi"
                }
            }
        },
        "ApiGatewayMethodApiPilabsSnsGetallOptions": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
                "AuthorizationType": "NONE",
                "HttpMethod": "OPTIONS",
                "MethodResponses": [
                    {
                        "StatusCode": "200",
                        "ResponseParameters": {
                            "method.response.header.Access-Control-Allow-Origin": true,
                            "method.response.header.Access-Control-Allow-Headers": true,
                            "method.response.header.Access-Control-Allow-Methods": true
                        },
                        "ResponseModels": {}
                    }
                ],
                "RequestParameters": {},
                "Integration": {
                    "Type": "MOCK",
                    "RequestTemplates": {
                        "application/json": "{statusCode:200}"
                    },
                    "ContentHandling": "CONVERT_TO_TEXT",
                    "IntegrationResponses": [
                        {
                            "StatusCode": "200",
                            "ResponseParameters": {
                                "method.response.header.Access-Control-Allow-Origin": "'*'",
                                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'",
                                "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET'"
                            },
                            "ResponseTemplates": {
                                "application/json": ""
                            }
                        }
                    ]
                },
                "ResourceId": {
                    "Ref": "ApiGatewayResourceApiPilabsSnsGetall"
                },
                "RestApiId": {
                    "Ref": "ApiGatewayRestApi"
                }
            }
        },
        "ApiGatewayMethodApiPilabsGetall1Options": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
                "AuthorizationType": "NONE",
                "HttpMethod": "OPTIONS",
                "MethodResponses": [
                    {
                        "StatusCode": "200",
                        "ResponseParameters": {
                            "method.response.header.Access-Control-Allow-Origin": true,
                            "method.response.header.Access-Control-Allow-Headers": true,
                            "method.response.header.Access-Control-Allow-Methods": true
                        },
                        "ResponseModels": {}
                    }
                ],
                "RequestParameters": {},
                "Integration": {
                    "Type": "MOCK",
                    "RequestTemplates": {
                        "application/json": "{statusCode:200}"
                    },
                    "ContentHandling": "CONVERT_TO_TEXT",
                    "IntegrationResponses": [
                        {
                            "StatusCode": "200",
                            "ResponseParameters": {
                                "method.response.header.Access-Control-Allow-Origin": "'*'",
                                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'",
                                "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET'"
                            },
                            "ResponseTemplates": {
                                "application/json": ""
                            }
                        }
                    ]
                },
                "ResourceId": {
                    "Ref": "ApiGatewayResourceApiPilabsGetall1"
                },
                "RestApiId": {
                    "Ref": "ApiGatewayRestApi"
                }
            }
        },
        "ApiGatewayMethodApiPilabsGettripetaOptions": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
                "AuthorizationType": "NONE",
                "HttpMethod": "OPTIONS",
                "MethodResponses": [
                    {
                        "StatusCode": "200",
                        "ResponseParameters": {
                            "method.response.header.Access-Control-Allow-Origin": true,
                            "method.response.header.Access-Control-Allow-Headers": true,
                            "method.response.header.Access-Control-Allow-Methods": true
                        },
                        "ResponseModels": {}
                    }
                ],
                "RequestParameters": {},
                "Integration": {
                    "Type": "MOCK",
                    "RequestTemplates": {
                        "application/json": "{statusCode:200}"
                    },
                    "ContentHandling": "CONVERT_TO_TEXT",
                    "IntegrationResponses": [
                        {
                            "StatusCode": "200",
                            "ResponseParameters": {
                                "method.response.header.Access-Control-Allow-Origin": "'*'",
                                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'",
                                "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET'"
                            },
                            "ResponseTemplates": {
                                "application/json": ""
                            }
                        }
                    ]
                },
                "ResourceId": {
                    "Ref": "ApiGatewayResourceApiPilabsGettripeta"
                },
                "RestApiId": {
                    "Ref": "ApiGatewayRestApi"
                }
            }
        },
        "ApiGatewayMethodApiPilabsTrackingGetbusstatusOptions": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
                "AuthorizationType": "NONE",
                "HttpMethod": "OPTIONS",
                "MethodResponses": [
                    {
                        "StatusCode": "200",
                        "ResponseParameters": {
                            "method.response.header.Access-Control-Allow-Origin": true,
                            "method.response.header.Access-Control-Allow-Headers": true,
                            "method.response.header.Access-Control-Allow-Methods": true
                        },
                        "ResponseModels": {}
                    }
                ],
                "RequestParameters": {},
                "Integration": {
                    "Type": "MOCK",
                    "RequestTemplates": {
                        "application/json": "{statusCode:200}"
                    },
                    "ContentHandling": "CONVERT_TO_TEXT",
                    "IntegrationResponses": [
                        {
                            "StatusCode": "200",
                            "ResponseParameters": {
                                "method.response.header.Access-Control-Allow-Origin": "'*'",
                                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'",
                                "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET'"
                            },
                            "ResponseTemplates": {
                                "application/json": ""
                            }
                        }
                    ]
                },
                "ResourceId": {
                    "Ref": "ApiGatewayResourceApiPilabsTrackingGetbusstatus"
                },
                "RestApiId": {
                    "Ref": "ApiGatewayRestApi"
                }
            }
        },
        "ApiGatewayMethodApiPilabsTrackingGetallbusesGet": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
                "HttpMethod": "GET",
                "RequestParameters": {},
                "ResourceId": {
                    "Ref": "ApiGatewayResourceApiPilabsTrackingGetallbuses"
                },
                "RestApiId": {
                    "Ref": "ApiGatewayRestApi"
                },
                "ApiKeyRequired": false,
                "AuthorizationType": "NONE",
                "Integration": {
                    "IntegrationHttpMethod": "POST",
                    "Type": "AWS_PROXY",
                    "Uri": {
                        "Fn::Join": [
                            "",
                            [
                                "arn:",
                                {
                                    "Ref": "AWS::Partition"
                                },
                                ":apigateway:",
                                {
                                    "Ref": "AWS::Region"
                                },
                                ":lambda:path/2015-03-31/functions/",
                                {
                                    "Fn::GetAtt": [
                                        "GetAllPilabsBusesLambdaFunction",
                                        "Arn"
                                    ]
                                },
                                "/invocations"
                            ]
                        ]
                    }
                },
                "MethodResponses": []
            },
            "DependsOn": [
                "GetAllPilabsBusesLambdaPermissionApiGateway"
            ]
        },
        "ApiGatewayMethodApiPilabsTrackingGetallpilabsbusesGet": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
                "HttpMethod": "GET",
                "RequestParameters": {},
                "ResourceId": {
                    "Ref": "ApiGatewayResourceApiPilabsTrackingGetallpilabsbuses"
                },
                "RestApiId": {
                    "Ref": "ApiGatewayRestApi"
                },
                "ApiKeyRequired": false,
                "AuthorizationType": "NONE",
                "Integration": {
                    "IntegrationHttpMethod": "POST",
                    "Type": "AWS_PROXY",
                    "Uri": {
                        "Fn::Join": [
                            "",
                            [
                                "arn:",
                                {
                                    "Ref": "AWS::Partition"
                                },
                                ":apigateway:",
                                {
                                    "Ref": "AWS::Region"
                                },
                                ":lambda:path/2015-03-31/functions/",
                                {
                                    "Fn::GetAtt": [
                                        "GetAllPilabsBuses1LambdaFunction",
                                        "Arn"
                                    ]
                                },
                                "/invocations"
                            ]
                        ]
                    }
                },
                "MethodResponses": []
            },
            "DependsOn": [
                "GetAllPilabsBuses1LambdaPermissionApiGateway"
            ]
        },
        "ApiGatewayMethodApiPilabsTrackingGetallstaticdetailsGet": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
                "HttpMethod": "GET",
                "RequestParameters": {},
                "ResourceId": {
                    "Ref": "ApiGatewayResourceApiPilabsTrackingGetallstaticdetails"
                },
                "RestApiId": {
                    "Ref": "ApiGatewayRestApi"
                },
                "ApiKeyRequired": false,
                "AuthorizationType": "NONE",
                "Integration": {
                    "IntegrationHttpMethod": "POST",
                    "Type": "AWS_PROXY",
                    "Uri": {
                        "Fn::Join": [
                            "",
                            [
                                "arn:",
                                {
                                    "Ref": "AWS::Partition"
                                },
                                ":apigateway:",
                                {
                                    "Ref": "AWS::Region"
                                },
                                ":lambda:path/2015-03-31/functions/",
                                {
                                    "Fn::GetAtt": [
                                        "GetAllPilabStaticDetailsLambdaFunction",
                                        "Arn"
                                    ]
                                },
                                "/invocations"
                            ]
                        ]
                    }
                },
                "MethodResponses": []
            },
            "DependsOn": [
                "GetAllPilabStaticDetailsLambdaPermissionApiGateway"
            ]
        },
        "ApiGatewayMethodApiPilabsTrackingGetallstaticdetails1Get": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
                "HttpMethod": "GET",
                "RequestParameters": {},
                "ResourceId": {
                    "Ref": "ApiGatewayResourceApiPilabsTrackingGetallstaticdetails1"
                },
                "RestApiId": {
                    "Ref": "ApiGatewayRestApi"
                },
                "ApiKeyRequired": false,
                "AuthorizationType": "NONE",
                "Integration": {
                    "IntegrationHttpMethod": "POST",
                    "Type": "AWS_PROXY",
                    "Uri": {
                        "Fn::Join": [
                            "",
                            [
                                "arn:",
                                {
                                    "Ref": "AWS::Partition"
                                },
                                ":apigateway:",
                                {
                                    "Ref": "AWS::Region"
                                },
                                ":lambda:path/2015-03-31/functions/",
                                {
                                    "Fn::GetAtt": [
                                        "GetAllPilabStaticDetails1LambdaFunction",
                                        "Arn"
                                    ]
                                },
                                "/invocations"
                            ]
                        ]
                    }
                },
                "MethodResponses": []
            },
            "DependsOn": [
                "GetAllPilabStaticDetails1LambdaPermissionApiGateway"
            ]
        },
        "ApiGatewayMethodApiPilabsTrackingGetbusexceptionsGet": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
                "HttpMethod": "GET",
                "RequestParameters": {},
                "ResourceId": {
                    "Ref": "ApiGatewayResourceApiPilabsTrackingGetbusexceptions"
                },
                "RestApiId": {
                    "Ref": "ApiGatewayRestApi"
                },
                "ApiKeyRequired": false,
                "AuthorizationType": "NONE",
                "Integration": {
                    "IntegrationHttpMethod": "POST",
                    "Type": "AWS_PROXY",
                    "Uri": {
                        "Fn::Join": [
                            "",
                            [
                                "arn:",
                                {
                                    "Ref": "AWS::Partition"
                                },
                                ":apigateway:",
                                {
                                    "Ref": "AWS::Region"
                                },
                                ":lambda:path/2015-03-31/functions/",
                                {
                                    "Fn::GetAtt": [
                                        "GetPilabsBusExceptionsLambdaFunction",
                                        "Arn"
                                    ]
                                },
                                "/invocations"
                            ]
                        ]
                    }
                },
                "MethodResponses": []
            },
            "DependsOn": [
                "GetPilabsBusExceptionsLambdaPermissionApiGateway"
            ]
        },
        "ApiGatewayMethodApiPilabsTrackingGetbusexceptions1Get": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
                "HttpMethod": "GET",
                "RequestParameters": {},
                "ResourceId": {
                    "Ref": "ApiGatewayResourceApiPilabsTrackingGetbusexceptions1"
                },
                "RestApiId": {
                    "Ref": "ApiGatewayRestApi"
                },
                "ApiKeyRequired": false,
                "AuthorizationType": "NONE",
                "Integration": {
                    "IntegrationHttpMethod": "POST",
                    "Type": "AWS_PROXY",
                    "Uri": {
                        "Fn::Join": [
                            "",
                            [
                                "arn:",
                                {
                                    "Ref": "AWS::Partition"
                                },
                                ":apigateway:",
                                {
                                    "Ref": "AWS::Region"
                                },
                                ":lambda:path/2015-03-31/functions/",
                                {
                                    "Fn::GetAtt": [
                                        "GetPilabsBusExceptions1LambdaFunction",
                                        "Arn"
                                    ]
                                },
                                "/invocations"
                            ]
                        ]
                    }
                },
                "MethodResponses": []
            },
            "DependsOn": [
                "GetPilabsBusExceptions1LambdaPermissionApiGateway"
            ]
        },
        "ApiGatewayMethodApiPilabsTrackingGetbuslocationtraceGet": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
                "HttpMethod": "GET",
                "RequestParameters": {},
                "ResourceId": {
                    "Ref": "ApiGatewayResourceApiPilabsTrackingGetbuslocationtrace"
                },
                "RestApiId": {
                    "Ref": "ApiGatewayRestApi"
                },
                "ApiKeyRequired": false,
                "AuthorizationType": "NONE",
                "Integration": {
                    "IntegrationHttpMethod": "POST",
                    "Type": "AWS_PROXY",
                    "Uri": {
                        "Fn::Join": [
                            "",
                            [
                                "arn:",
                                {
                                    "Ref": "AWS::Partition"
                                },
                                ":apigateway:",
                                {
                                    "Ref": "AWS::Region"
                                },
                                ":lambda:path/2015-03-31/functions/",
                                {
                                    "Fn::GetAtt": [
                                        "GetPilabsBusLocationTraceLambdaFunction",
                                        "Arn"
                                    ]
                                },
                                "/invocations"
                            ]
                        ]
                    }
                },
                "MethodResponses": []
            },
            "DependsOn": [
                "GetPilabsBusLocationTraceLambdaPermissionApiGateway"
            ]
        },
        "ApiGatewayMethodApiPilabsTrackingGetbuslocationtrace1Get": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
                "HttpMethod": "GET",
                "RequestParameters": {},
                "ResourceId": {
                    "Ref": "ApiGatewayResourceApiPilabsTrackingGetbuslocationtrace1"
                },
                "RestApiId": {
                    "Ref": "ApiGatewayRestApi"
                },
                "ApiKeyRequired": false,
                "AuthorizationType": "NONE",
                "Integration": {
                    "IntegrationHttpMethod": "POST",
                    "Type": "AWS_PROXY",
                    "Uri": {
                        "Fn::Join": [
                            "",
                            [
                                "arn:",
                                {
                                    "Ref": "AWS::Partition"
                                },
                                ":apigateway:",
                                {
                                    "Ref": "AWS::Region"
                                },
                                ":lambda:path/2015-03-31/functions/",
                                {
                                    "Fn::GetAtt": [
                                        "GetPilabsBusLocationTrace1LambdaFunction",
                                        "Arn"
                                    ]
                                },
                                "/invocations"
                            ]
                        ]
                    }
                },
                "MethodResponses": []
            },
            "DependsOn": [
                "GetPilabsBusLocationTrace1LambdaPermissionApiGateway"
            ]
        },
        "ApiGatewayMethodApiPilabsUserGetbusesstationetadataGet": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
                "HttpMethod": "GET",
                "RequestParameters": {},
                "ResourceId": {
                    "Ref": "ApiGatewayResourceApiPilabsUserGetbusesstationetadata"
                },
                "RestApiId": {
                    "Ref": "ApiGatewayRestApi"
                },
                "ApiKeyRequired": false,
                "AuthorizationType": "NONE",
                "Integration": {
                    "IntegrationHttpMethod": "POST",
                    "Type": "AWS_PROXY",
                    "Uri": {
                        "Fn::Join": [
                            "",
                            [
                                "arn:",
                                {
                                    "Ref": "AWS::Partition"
                                },
                                ":apigateway:",
                                {
                                    "Ref": "AWS::Region"
                                },
                                ":lambda:path/2015-03-31/functions/",
                                {
                                    "Fn::GetAtt": [
                                        "GetPilabsBusesStationEtaDataLambdaFunction",
                                        "Arn"
                                    ]
                                },
                                "/invocations"
                            ]
                        ]
                    }
                },
                "MethodResponses": []
            },
            "DependsOn": [
                "GetPilabsBusesStationEtaDataLambdaPermissionApiGateway"
            ]
        },
        "ApiGatewayMethodApiPilabsUserUsergetstaticdetailsGet": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
                "HttpMethod": "GET",
                "RequestParameters": {},
                "ResourceId": {
                    "Ref": "ApiGatewayResourceApiPilabsUserUsergetstaticdetails"
                },
                "RestApiId": {
                    "Ref": "ApiGatewayRestApi"
                },
                "ApiKeyRequired": false,
                "AuthorizationType": "NONE",
                "Integration": {
                    "IntegrationHttpMethod": "POST",
                    "Type": "AWS_PROXY",
                    "Uri": {
                        "Fn::Join": [
                            "",
                            [
                                "arn:",
                                {
                                    "Ref": "AWS::Partition"
                                },
                                ":apigateway:",
                                {
                                    "Ref": "AWS::Region"
                                },
                                ":lambda:path/2015-03-31/functions/",
                                {
                                    "Fn::GetAtt": [
                                        "UserGetPilabsStaticDetailsLambdaFunction",
                                        "Arn"
                                    ]
                                },
                                "/invocations"
                            ]
                        ]
                    }
                },
                "MethodResponses": []
            },
            "DependsOn": [
                "UserGetPilabsStaticDetailsLambdaPermissionApiGateway"
            ]
        },
        "ApiGatewayMethodApiPilabsAdddevicePost": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
                "HttpMethod": "POST",
                "RequestParameters": {},
                "ResourceId": {
                    "Ref": "ApiGatewayResourceApiPilabsAdddevice"
                },
                "RestApiId": {
                    "Ref": "ApiGatewayRestApi"
                },
                "ApiKeyRequired": false,
                "AuthorizationType": "NONE",
                "Integration": {
                    "IntegrationHttpMethod": "POST",
                    "Type": "AWS_PROXY",
                    "Uri": {
                        "Fn::Join": [
                            "",
                            [
                                "arn:",
                                {
                                    "Ref": "AWS::Partition"
                                },
                                ":apigateway:",
                                {
                                    "Ref": "AWS::Region"
                                },
                                ":lambda:path/2015-03-31/functions/",
                                {
                                    "Fn::GetAtt": [
                                        "AddDeviceLambdaFunction",
                                        "Arn"
                                    ]
                                },
                                "/invocations"
                            ]
                        ]
                    }
                },
                "MethodResponses": []
            },
            "DependsOn": [
                "AddDeviceLambdaPermissionApiGateway"
            ]
        },
        "ApiGatewayMethodApiPilabsGetallGet": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
                "HttpMethod": "GET",
                "RequestParameters": {},
                "ResourceId": {
                    "Ref": "ApiGatewayResourceApiPilabsGetall"
                },
                "RestApiId": {
                    "Ref": "ApiGatewayRestApi"
                },
                "ApiKeyRequired": false,
                "AuthorizationType": "NONE",
                "Integration": {
                    "IntegrationHttpMethod": "POST",
                    "Type": "AWS_PROXY",
                    "Uri": {
                        "Fn::Join": [
                            "",
                            [
                                "arn:",
                                {
                                    "Ref": "AWS::Partition"
                                },
                                ":apigateway:",
                                {
                                    "Ref": "AWS::Region"
                                },
                                ":lambda:path/2015-03-31/functions/",
                                {
                                    "Fn::GetAtt": [
                                        "GetPilabsTripsLambdaFunction",
                                        "Arn"
                                    ]
                                },
                                "/invocations"
                            ]
                        ]
                    }
                },
                "MethodResponses": []
            },
            "DependsOn": [
                "GetPilabsTripsLambdaPermissionApiGateway"
            ]
        },
        "ApiGatewayMethodApiPilabsSnsGetallGet": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
                "HttpMethod": "GET",
                "RequestParameters": {},
                "ResourceId": {
                    "Ref": "ApiGatewayResourceApiPilabsSnsGetall"
                },
                "RestApiId": {
                    "Ref": "ApiGatewayRestApi"
                },
                "ApiKeyRequired": false,
                "AuthorizationType": "NONE",
                "Integration": {
                    "IntegrationHttpMethod": "POST",
                    "Type": "AWS_PROXY",
                    "Uri": {
                        "Fn::Join": [
                            "",
                            [
                                "arn:",
                                {
                                    "Ref": "AWS::Partition"
                                },
                                ":apigateway:",
                                {
                                    "Ref": "AWS::Region"
                                },
                                ":lambda:path/2015-03-31/functions/",
                                {
                                    "Fn::GetAtt": [
                                        "GetDeviceInfoLambdaFunction",
                                        "Arn"
                                    ]
                                },
                                "/invocations"
                            ]
                        ]
                    }
                },
                "MethodResponses": []
            },
            "DependsOn": [
                "GetDeviceInfoLambdaPermissionApiGateway"
            ]
        },
        "ApiGatewayMethodApiPilabsGetall1Get": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
                "HttpMethod": "GET",
                "RequestParameters": {},
                "ResourceId": {
                    "Ref": "ApiGatewayResourceApiPilabsGetall1"
                },
                "RestApiId": {
                    "Ref": "ApiGatewayRestApi"
                },
                "ApiKeyRequired": false,
                "AuthorizationType": "NONE",
                "Integration": {
                    "IntegrationHttpMethod": "POST",
                    "Type": "AWS_PROXY",
                    "Uri": {
                        "Fn::Join": [
                            "",
                            [
                                "arn:",
                                {
                                    "Ref": "AWS::Partition"
                                },
                                ":apigateway:",
                                {
                                    "Ref": "AWS::Region"
                                },
                                ":lambda:path/2015-03-31/functions/",
                                {
                                    "Fn::GetAtt": [
                                        "InsertPilabsTripsLambdaFunction",
                                        "Arn"
                                    ]
                                },
                                "/invocations"
                            ]
                        ]
                    }
                },
                "MethodResponses": []
            },
            "DependsOn": [
                "InsertPilabsTripsLambdaPermissionApiGateway"
            ]
        },
        "ApiGatewayMethodApiPilabsGettripetaGet": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
                "HttpMethod": "GET",
                "RequestParameters": {},
                "ResourceId": {
                    "Ref": "ApiGatewayResourceApiPilabsGettripeta"
                },
                "RestApiId": {
                    "Ref": "ApiGatewayRestApi"
                },
                "ApiKeyRequired": false,
                "AuthorizationType": "NONE",
                "Integration": {
                    "IntegrationHttpMethod": "POST",
                    "Type": "AWS_PROXY",
                    "Uri": {
                        "Fn::Join": [
                            "",
                            [
                                "arn:",
                                {
                                    "Ref": "AWS::Partition"
                                },
                                ":apigateway:",
                                {
                                    "Ref": "AWS::Region"
                                },
                                ":lambda:path/2015-03-31/functions/",
                                {
                                    "Fn::GetAtt": [
                                        "GetPilabsTripsETALambdaFunction",
                                        "Arn"
                                    ]
                                },
                                "/invocations"
                            ]
                        ]
                    }
                },
                "MethodResponses": []
            },
            "DependsOn": [
                "GetPilabsTripsETALambdaPermissionApiGateway"
            ]
        },
        "ApiGatewayMethodApiPilabsTrackingGetbusstatusGet": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
                "HttpMethod": "GET",
                "RequestParameters": {},
                "ResourceId": {
                    "Ref": "ApiGatewayResourceApiPilabsTrackingGetbusstatus"
                },
                "RestApiId": {
                    "Ref": "ApiGatewayRestApi"
                },
                "ApiKeyRequired": false,
                "AuthorizationType": "NONE",
                "Integration": {
                    "IntegrationHttpMethod": "POST",
                    "Type": "AWS_PROXY",
                    "Uri": {
                        "Fn::Join": [
                            "",
                            [
                                "arn:",
                                {
                                    "Ref": "AWS::Partition"
                                },
                                ":apigateway:",
                                {
                                    "Ref": "AWS::Region"
                                },
                                ":lambda:path/2015-03-31/functions/",
                                {
                                    "Fn::GetAtt": [
                                        "GetPilabBusesStatusLambdaFunction",
                                        "Arn"
                                    ]
                                },
                                "/invocations"
                            ]
                        ]
                    }
                },
                "MethodResponses": []
            },
            "DependsOn": [
                "GetPilabBusesStatusLambdaPermissionApiGateway"
            ]
        },
        "ApiGatewayDeployment1666696089477": {
            "Type": "AWS::ApiGateway::Deployment",
            "Properties": {
                "RestApiId": {
                    "Ref": "ApiGatewayRestApi"
                },
                "StageName": "dev"
            },
            "DependsOn": [
                "ApiGatewayMethodApiPilabsTrackingGetallbusesOptions",
                "ApiGatewayMethodApiPilabsTrackingGetallpilabsbusesOptions",
                "ApiGatewayMethodApiPilabsTrackingGetallstaticdetailsOptions",
                "ApiGatewayMethodApiPilabsTrackingGetallstaticdetails1Options",
                "ApiGatewayMethodApiPilabsTrackingGetbusexceptionsOptions",
                "ApiGatewayMethodApiPilabsTrackingGetbusexceptions1Options",
                "ApiGatewayMethodApiPilabsTrackingGetbuslocationtraceOptions",
                "ApiGatewayMethodApiPilabsTrackingGetbuslocationtrace1Options",
                "ApiGatewayMethodApiPilabsUserGetbusesstationetadataOptions",
                "ApiGatewayMethodApiPilabsUserUsergetstaticdetailsOptions",
                "ApiGatewayMethodApiPilabsAdddeviceOptions",
                "ApiGatewayMethodApiPilabsGetallOptions",
                "ApiGatewayMethodApiPilabsSnsGetallOptions",
                "ApiGatewayMethodApiPilabsGetall1Options",
                "ApiGatewayMethodApiPilabsGettripetaOptions",
                "ApiGatewayMethodApiPilabsTrackingGetbusstatusOptions",
                "ApiGatewayMethodApiPilabsTrackingGetallbusesGet",
                "ApiGatewayMethodApiPilabsTrackingGetallpilabsbusesGet",
                "ApiGatewayMethodApiPilabsTrackingGetallstaticdetailsGet",
                "ApiGatewayMethodApiPilabsTrackingGetallstaticdetails1Get",
                "ApiGatewayMethodApiPilabsTrackingGetbusexceptionsGet",
                "ApiGatewayMethodApiPilabsTrackingGetbusexceptions1Get",
                "ApiGatewayMethodApiPilabsTrackingGetbuslocationtraceGet",
                "ApiGatewayMethodApiPilabsTrackingGetbuslocationtrace1Get",
                "ApiGatewayMethodApiPilabsUserGetbusesstationetadataGet",
                "ApiGatewayMethodApiPilabsUserUsergetstaticdetailsGet",
                "ApiGatewayMethodApiPilabsAdddevicePost",
                "ApiGatewayMethodApiPilabsGetallGet",
                "ApiGatewayMethodApiPilabsSnsGetallGet",
                "ApiGatewayMethodApiPilabsGetall1Get",
                "ApiGatewayMethodApiPilabsGettripetaGet",
                "ApiGatewayMethodApiPilabsTrackingGetbusstatusGet"
            ]
        },
        "GetAllPilabsBusesLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
                "FunctionName": {
                    "Fn::GetAtt": [
                        "GetAllPilabsBusesLambdaFunction",
                        "Arn"
                    ]
                },
                "Action": "lambda:InvokeFunction",
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {
                    "Fn::Join": [
                        "",
                        [
                            "arn:",
                            {
                                "Ref": "AWS::Partition"
                            },
                            ":execute-api:",
                            {
                                "Ref": "AWS::Region"
                            },
                            ":",
                            {
                                "Ref": "AWS::AccountId"
                            },
                            ":",
                            {
                                "Ref": "ApiGatewayRestApi"
                            },
                            "/*/*"
                        ]
                    ]
                }
            }
        },
        "GetAllPilabsBuses1LambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
                "FunctionName": {
                    "Fn::GetAtt": [
                        "GetAllPilabsBuses1LambdaFunction",
                        "Arn"
                    ]
                },
                "Action": "lambda:InvokeFunction",
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {
                    "Fn::Join": [
                        "",
                        [
                            "arn:",
                            {
                                "Ref": "AWS::Partition"
                            },
                            ":execute-api:",
                            {
                                "Ref": "AWS::Region"
                            },
                            ":",
                            {
                                "Ref": "AWS::AccountId"
                            },
                            ":",
                            {
                                "Ref": "ApiGatewayRestApi"
                            },
                            "/*/*"
                        ]
                    ]
                }
            }
        },
        "GetAllPilabStaticDetailsLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
                "FunctionName": {
                    "Fn::GetAtt": [
                        "GetAllPilabStaticDetailsLambdaFunction",
                        "Arn"
                    ]
                },
                "Action": "lambda:InvokeFunction",
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {
                    "Fn::Join": [
                        "",
                        [
                            "arn:",
                            {
                                "Ref": "AWS::Partition"
                            },
                            ":execute-api:",
                            {
                                "Ref": "AWS::Region"
                            },
                            ":",
                            {
                                "Ref": "AWS::AccountId"
                            },
                            ":",
                            {
                                "Ref": "ApiGatewayRestApi"
                            },
                            "/*/*"
                        ]
                    ]
                }
            }
        },
        "GetAllPilabStaticDetails1LambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
                "FunctionName": {
                    "Fn::GetAtt": [
                        "GetAllPilabStaticDetails1LambdaFunction",
                        "Arn"
                    ]
                },
                "Action": "lambda:InvokeFunction",
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {
                    "Fn::Join": [
                        "",
                        [
                            "arn:",
                            {
                                "Ref": "AWS::Partition"
                            },
                            ":execute-api:",
                            {
                                "Ref": "AWS::Region"
                            },
                            ":",
                            {
                                "Ref": "AWS::AccountId"
                            },
                            ":",
                            {
                                "Ref": "ApiGatewayRestApi"
                            },
                            "/*/*"
                        ]
                    ]
                }
            }
        },
        "GetPilabsBusExceptionsLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
                "FunctionName": {
                    "Fn::GetAtt": [
                        "GetPilabsBusExceptionsLambdaFunction",
                        "Arn"
                    ]
                },
                "Action": "lambda:InvokeFunction",
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {
                    "Fn::Join": [
                        "",
                        [
                            "arn:",
                            {
                                "Ref": "AWS::Partition"
                            },
                            ":execute-api:",
                            {
                                "Ref": "AWS::Region"
                            },
                            ":",
                            {
                                "Ref": "AWS::AccountId"
                            },
                            ":",
                            {
                                "Ref": "ApiGatewayRestApi"
                            },
                            "/*/*"
                        ]
                    ]
                }
            }
        },
        "GetPilabsBusExceptions1LambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
                "FunctionName": {
                    "Fn::GetAtt": [
                        "GetPilabsBusExceptions1LambdaFunction",
                        "Arn"
                    ]
                },
                "Action": "lambda:InvokeFunction",
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {
                    "Fn::Join": [
                        "",
                        [
                            "arn:",
                            {
                                "Ref": "AWS::Partition"
                            },
                            ":execute-api:",
                            {
                                "Ref": "AWS::Region"
                            },
                            ":",
                            {
                                "Ref": "AWS::AccountId"
                            },
                            ":",
                            {
                                "Ref": "ApiGatewayRestApi"
                            },
                            "/*/*"
                        ]
                    ]
                }
            }
        },
        "GetPilabsBusLocationTraceLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
                "FunctionName": {
                    "Fn::GetAtt": [
                        "GetPilabsBusLocationTraceLambdaFunction",
                        "Arn"
                    ]
                },
                "Action": "lambda:InvokeFunction",
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {
                    "Fn::Join": [
                        "",
                        [
                            "arn:",
                            {
                                "Ref": "AWS::Partition"
                            },
                            ":execute-api:",
                            {
                                "Ref": "AWS::Region"
                            },
                            ":",
                            {
                                "Ref": "AWS::AccountId"
                            },
                            ":",
                            {
                                "Ref": "ApiGatewayRestApi"
                            },
                            "/*/*"
                        ]
                    ]
                }
            }
        },
        "GetPilabsBusLocationTrace1LambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
                "FunctionName": {
                    "Fn::GetAtt": [
                        "GetPilabsBusLocationTrace1LambdaFunction",
                        "Arn"
                    ]
                },
                "Action": "lambda:InvokeFunction",
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {
                    "Fn::Join": [
                        "",
                        [
                            "arn:",
                            {
                                "Ref": "AWS::Partition"
                            },
                            ":execute-api:",
                            {
                                "Ref": "AWS::Region"
                            },
                            ":",
                            {
                                "Ref": "AWS::AccountId"
                            },
                            ":",
                            {
                                "Ref": "ApiGatewayRestApi"
                            },
                            "/*/*"
                        ]
                    ]
                }
            }
        },
        "GetPilabsBusesStationEtaDataLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
                "FunctionName": {
                    "Fn::GetAtt": [
                        "GetPilabsBusesStationEtaDataLambdaFunction",
                        "Arn"
                    ]
                },
                "Action": "lambda:InvokeFunction",
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {
                    "Fn::Join": [
                        "",
                        [
                            "arn:",
                            {
                                "Ref": "AWS::Partition"
                            },
                            ":execute-api:",
                            {
                                "Ref": "AWS::Region"
                            },
                            ":",
                            {
                                "Ref": "AWS::AccountId"
                            },
                            ":",
                            {
                                "Ref": "ApiGatewayRestApi"
                            },
                            "/*/*"
                        ]
                    ]
                }
            }
        },
        "UserGetPilabsStaticDetailsLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
                "FunctionName": {
                    "Fn::GetAtt": [
                        "UserGetPilabsStaticDetailsLambdaFunction",
                        "Arn"
                    ]
                },
                "Action": "lambda:InvokeFunction",
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {
                    "Fn::Join": [
                        "",
                        [
                            "arn:",
                            {
                                "Ref": "AWS::Partition"
                            },
                            ":execute-api:",
                            {
                                "Ref": "AWS::Region"
                            },
                            ":",
                            {
                                "Ref": "AWS::AccountId"
                            },
                            ":",
                            {
                                "Ref": "ApiGatewayRestApi"
                            },
                            "/*/*"
                        ]
                    ]
                }
            }
        },
        "AddDeviceLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
                "FunctionName": {
                    "Fn::GetAtt": [
                        "AddDeviceLambdaFunction",
                        "Arn"
                    ]
                },
                "Action": "lambda:InvokeFunction",
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {
                    "Fn::Join": [
                        "",
                        [
                            "arn:",
                            {
                                "Ref": "AWS::Partition"
                            },
                            ":execute-api:",
                            {
                                "Ref": "AWS::Region"
                            },
                            ":",
                            {
                                "Ref": "AWS::AccountId"
                            },
                            ":",
                            {
                                "Ref": "ApiGatewayRestApi"
                            },
                            "/*/*"
                        ]
                    ]
                }
            }
        },
        "GetPilabsTripsLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
                "FunctionName": {
                    "Fn::GetAtt": [
                        "GetPilabsTripsLambdaFunction",
                        "Arn"
                    ]
                },
                "Action": "lambda:InvokeFunction",
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {
                    "Fn::Join": [
                        "",
                        [
                            "arn:",
                            {
                                "Ref": "AWS::Partition"
                            },
                            ":execute-api:",
                            {
                                "Ref": "AWS::Region"
                            },
                            ":",
                            {
                                "Ref": "AWS::AccountId"
                            },
                            ":",
                            {
                                "Ref": "ApiGatewayRestApi"
                            },
                            "/*/*"
                        ]
                    ]
                }
            }
        },
        "GetDeviceInfoLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
                "FunctionName": {
                    "Fn::GetAtt": [
                        "GetDeviceInfoLambdaFunction",
                        "Arn"
                    ]
                },
                "Action": "lambda:InvokeFunction",
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {
                    "Fn::Join": [
                        "",
                        [
                            "arn:",
                            {
                                "Ref": "AWS::Partition"
                            },
                            ":execute-api:",
                            {
                                "Ref": "AWS::Region"
                            },
                            ":",
                            {
                                "Ref": "AWS::AccountId"
                            },
                            ":",
                            {
                                "Ref": "ApiGatewayRestApi"
                            },
                            "/*/*"
                        ]
                    ]
                }
            }
        },
        "InsertPilabsTripsLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
                "FunctionName": {
                    "Fn::GetAtt": [
                        "InsertPilabsTripsLambdaFunction",
                        "Arn"
                    ]
                },
                "Action": "lambda:InvokeFunction",
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {
                    "Fn::Join": [
                        "",
                        [
                            "arn:",
                            {
                                "Ref": "AWS::Partition"
                            },
                            ":execute-api:",
                            {
                                "Ref": "AWS::Region"
                            },
                            ":",
                            {
                                "Ref": "AWS::AccountId"
                            },
                            ":",
                            {
                                "Ref": "ApiGatewayRestApi"
                            },
                            "/*/*"
                        ]
                    ]
                }
            }
        },
        "GetPilabsTripsETALambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
                "FunctionName": {
                    "Fn::GetAtt": [
                        "GetPilabsTripsETALambdaFunction",
                        "Arn"
                    ]
                },
                "Action": "lambda:InvokeFunction",
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {
                    "Fn::Join": [
                        "",
                        [
                            "arn:",
                            {
                                "Ref": "AWS::Partition"
                            },
                            ":execute-api:",
                            {
                                "Ref": "AWS::Region"
                            },
                            ":",
                            {
                                "Ref": "AWS::AccountId"
                            },
                            ":",
                            {
                                "Ref": "ApiGatewayRestApi"
                            },
                            "/*/*"
                        ]
                    ]
                }
            }
        },
        "GetPilabBusesStatusLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
                "FunctionName": {
                    "Fn::GetAtt": [
                        "GetPilabBusesStatusLambdaFunction",
                        "Arn"
                    ]
                },
                "Action": "lambda:InvokeFunction",
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {
                    "Fn::Join": [
                        "",
                        [
                            "arn:",
                            {
                                "Ref": "AWS::Partition"
                            },
                            ":execute-api:",
                            {
                                "Ref": "AWS::Region"
                            },
                            ":",
                            {
                                "Ref": "AWS::AccountId"
                            },
                            ":",
                            {
                                "Ref": "ApiGatewayRestApi"
                            },
                            "/*/*"
                        ]
                    ]
                }
            }
        },
        "SnsLambdaTriggeredSnsSubscriptionPilabsat473913856290": {
            "Type": "AWS::SNS::Subscription",
            "Properties": {
                "TopicArn": "arn:aws:sns:af-south-1:473913856290:pilabs-at-473913856290",
                "Protocol": "lambda",
                "Endpoint": {
                    "Fn::GetAtt": [
                        "SnsLambdaTriggeredLambdaFunction",
                        "Arn"
                    ]
                }
            }
        },
        "SnsLambdaTriggeredLambdaPermissionPilabsat473913856290SNS": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
                "FunctionName": {
                    "Fn::GetAtt": [
                        "SnsLambdaTriggeredLambdaFunction",
                        "Arn"
                    ]
                },
                "Action": "lambda:InvokeFunction",
                "Principal": "sns.amazonaws.com",
                "SourceArn": "arn:aws:sns:af-south-1:473913856290:pilabs-at-473913856290"
            }
        }
    },
    "Outputs": {
        "ServerlessDeploymentBucketName": {
            "Value": {
                "Ref": "ServerlessDeploymentBucket"
            },
            "Export": {
                "Name": "sls-iot-bus-pilabs-dev-ServerlessDeploymentBucketName"
            }
        },
        "ServiceEndpoint": {
            "Description": "URL of the service endpoint",
            "Value": {
                "Fn::Join": [
                    "",
                    [
                        "https://",
                        {
                            "Ref": "ApiGatewayRestApi"
                        },
                        ".execute-api.",
                        {
                            "Ref": "AWS::Region"
                        },
                        ".",
                        {
                            "Ref": "AWS::URLSuffix"
                        },
                        "/dev"
                    ]
                ]
            },
            "Export": {
                "Name": "sls-iot-bus-pilabs-dev-ServiceEndpoint"
            }
        }
    }
}
